version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.2.0

executors:
  docker-executor:
    docker:
      - image: cimg/base:current
        user: root

jobs:
  build:
    executor: docker-executor
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          privileged: true  # Required for Buildx
          docker_layer_caching: true
      - run:
          no_output_timeout: 30m
          name: Set up Docker Buildx
          command: |
            docker buildx create --use --name multiarch_builder
            docker buildx inspect --bootstrap  # Ensures everything is set up correctly
      - run:
          name: Login to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Build Multi-Arch Docker Image
          command: |
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              .
  publish-multiarch-to-ecr:
    executor: docker-executor
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          privileged: true  # Required for Buildx
          docker_layer_caching: true
      - run:
          no_output_timeout: 30m
          name: Set up Docker Buildx
          command: |
            docker buildx create --use --name multiarch_builder
            docker buildx inspect --bootstrap  # Ensures everything is set up correctly
      - aws-cli/setup:
          role-arn: "arn:aws:iam::017118846235:role/circleci-sandbox-telemetry"
          role-session-name: "supervised-collector"
          aws-region: AWS_REGION
      - run:
          name: Login to ECR
          command: |
            set -x

            export ECR_HOST=017118846235.dkr.ecr.us-east-1.amazonaws.com

            aws ecr get-login-password --region us-east-1 \
              | docker login --username AWS --password-stdin "${ECR_HOST}"
      - run:
          name: Push Multi-Arch Docker Image
          command: |
            VERSION_FROM_GIT=$(git describe --tags --match='v[0-9]*' --always)
            VERSION_FROM_GIT=${VERSION_FROM_GIT#'v'}
            
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --sbom=true \
              --provenance=true \
              --push \
              -t 017118846235.dkr.ecr.us-east-1.amazonaws.com/supervised-collector:$CIRCLE_SHA1 \
              -t 017118846235.dkr.ecr.us-east-1.amazonaws.com/supervised-collector:$VERSION_FROM_GIT \
              .

  publish-multiarch-to-dockerhub:
    executor: docker-executor
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker:
          privileged: true  # Required for Buildx
          docker_layer_caching: true
      - run:
          no_output_timeout: 30m
          name: Set up Docker Buildx
          command: |
            docker buildx create --use --name multiarch_builder
            docker buildx inspect --bootstrap  # Ensures everything is set up correctly
      - run:
          name: Login to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Push Multi-Arch Docker Image
          command: |
            docker buildx build \
              --platform linux/amd64,linux/arm64 \
              --sbom=true \
              --provenance=true \
              --push \
              -t honeycombio/supervised-collector:$CIRCLE_SHA1 \
              -t honeycombio/supervised-collector:latest \
              .

workflows:
  version: 2
  build:
    jobs:
      - build:
          context: Honeycomb Secrets for Public Repos
          filters:
            tags:
              ignore: /^v.*/
      - publish-multiarch-to-ecr:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /pull\/.*/
      - publish-multiarch-to-dockerhub:
          context: Honeycomb Secrets for Public Repos
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/